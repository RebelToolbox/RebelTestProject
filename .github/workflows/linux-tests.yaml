name: 🐧 Linux Tests
on:
  push:
  pull_request:
  schedule:
    # Run a test every week: on Sunday night at midnight.
    - cron: '0 0 * * 1'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  linux-builds:
    name: ${{ matrix.name }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - name: Build production editor
            artifact: linux-editor
            build-options: production=yes
            rebel-executable: rebel.x11.tools.64

          - name: Build with Clang address (includes leak) and undefined bahaviour sanitizers
            artifact: clang-asan-ubsan-sanitizers
            build-options: use_asan=yes use_ubsan=yes use_llvm=yes use_lld=yes
            rebel-executable: rebel.x11.tools.64.llvms

          - name: Build with Clang thread sanitizer
            artifact: clang-tsan-sanitizer
            build-options: use_tsan=yes use_llvm=yes use_lld=yes
            rebel-executable: rebel.x11.tools.64.llvms

          - name: Build with GCC address (includes leak) and undefined behaviour sanitizers
            artifact: gcc-asan-ubsan-sanitizers
            build-options: use_asan=yes use_ubsan=yes
            rebel-executable: rebel.x11.tools.64s

          - name: Build Linux Debug Template with Clang address (includes leak) and undefined behaviour sanitizers
            artifact: linux-debug-template
            build-options: tools=no target=release debug_symbols=yes use_asan=yes use_ubsan=yes use_llvm=yes use_lld=yes
            rebel-executable: rebel.x11.opt.64.llvms

    steps:
      - name: Checkout Rebel Test Project
        uses: actions/checkout@v3

      - name: Build Rebel
        uses: ./.github/actions/build-rebel
        with:
          artifact: ${{ matrix.artifact }}
          build-options: ${{ matrix.build-options }}
          rebel-executable: ${{ matrix.rebel-executable }}

  linux-tests:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    needs: linux-builds
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Test Clang address (includes leak) and undefined bahaviour sanitizers
            artifact: clang-asan-ubsan-sanitizers
            rebel-executable: rebel.x11.tools.64.llvms

          - name: Test Clang thread sanitizer
            artifact: clang-tsan-sanitizer
            rebel-executable: rebel.x11.tools.64.llvms

          - name: Test GCC address (includes leak) and undefined bahaviour sanitizers
            artifact: gcc-asan-ubsan-sanitizers
            rebel-executable: rebel.x11.tools.64s

    steps:
      - name: Checkout Rebel Test Project
        uses: actions/checkout@v3

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.artifact }}

      - name: Make Rebel Build Executable
        run: chmod +x ${{ matrix.rebel-executable }}

      # Open Editor to import assets
      - name: Open Rebel Engine Editor
        run: |
          DRI_PRIME=0 xvfb-run ./${{ matrix.rebel-executable }} -e -q 2>&1 | tee editor.log
          ./check_log.py editor.log

      - name: Run Rebel Engine Test Project
        run: |
          DRI_PRIME=0 xvfb-run ./${{ matrix.rebel-executable }} 300 2>&1 | tee project.log
          ./check_log.py project.log

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}-logs
          path: |
            editor.log
            project.log
          retention-days: 14

  linux-export-tests:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    needs: linux-builds
    strategy:
      matrix:
        include:
          - name: Test Exported Linux Rebel Project
            editor-artifact: linux-editor
            editor: rebel.x11.tools.64
            template-artifact: linux-debug-template
            template: rebel.x11.opt.64.llvms
            export-preset: Linux/X11
            export-preset-key: LINUX_DEBUG_TEMPLATE
            export-type: -debug
            export: linux-debug-export

    steps:
      - name: Checkout Rebel Test Project
        uses: actions/checkout@v3

      - name: Download Editor Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.editor-artifact }}

      - name: Download Template Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.template-artifact }}

      - name: Make Rebel Editor Executable
        run: chmod +x ${{ matrix.editor }}

      - name: Update Export Presets
        run: |
          template="$(pwd)/${{ matrix.template }}"
          sed -i "s|${{ matrix.export-preset-key }}|$template|" export_presets.cfg

      - name: Export Project
        run: |
          DRI_PRIME=0 xvfb-run ./${{ matrix.editor }} --export${{ matrix.export-type }} "${{ matrix.export-preset }}" ${{ matrix.export }} 2>&1 | tee export.log
          ./check_log.py export.log

      - name: Run Exported Project
        run: |
          DRI_PRIME=0 xvfb-run ./${{ matrix.export }} 300 2>&1 | tee project.log
          ./check_log.py project.log

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.export }}
          path: |
            ${{ matrix.export }}
            export.log
            project.log
          retention-days: 14
