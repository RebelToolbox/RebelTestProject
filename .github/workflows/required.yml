name: 🐧 Required Build
on: 
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  linux-sanitizer:
    runs-on: "ubuntu-20.04"
    name: Editor and exported project with sanitizers (target=debug/release, tools=yes/no, debug_symbols=yes, use_ubsan=yes, use_asan=yes)

    steps:
      - uses: actions/checkout@v2

      # Azure repositories are not reliable, we need to prevent azure giving us packages.
      - name: Make apt sources.list use the default Ubuntu repositories
        run: |
          sudo rm -f /etc/apt/sources.list.d/*
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update

      # Install all packages (except scons)
      - name: Configure dependencies
        run: |
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
            libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm \
            xvfb wget2 unzip python scons git

      - name: Download Rebel Engine
        run: |
          git clone https://github.com/RebelToolbox/RebelEngine.git

      - name: Compile Rebel Engine
        run: |
          cd RebelEngine
          scons p=x11 -j2 use_asan=yes use_ubsan=yes
          cp bin/godot.x11.tools.64s ../
          cd ../
          rm -rf RebelEngine

      # Open editor to import porject
      - name: Open Rebel Engine Editor
        run: |
          DRI_PRIME=0 xvfb-run ./godot.x11.tools.64s --audio-driver Dummy -e -q --path $(pwd) 2>&1 | tee sanitizers_log.txt || true
          misc/check_ci_log.py sanitizers_log.txt

      - name: Run Rebel Engine Test Project
        run: |
          DRI_PRIME=0 xvfb-run ./godot.x11.tools.64s 60 --audio-driver Dummy --video-driver GLES3 --path $(pwd) 2>&1 | tee sanitizers_log.txt || true
          misc/check_ci_log.py sanitizers_log.txt

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}
          path: godot.x11.tools.64s
          retention-days: 14
